// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db/sbtha.db"
}

model User {
  id                  Int       @id @default(autoincrement())
  username            String    @unique
  password            String
  firstName           String
  middleName          String
  lastName            String
  role                Role      @relation(fields: [roleId], references: [id])
  roleId              Int       @unique
  createdAt           DateTime  @default(now())
  updatedAt           DateTime? @updatedAt
  deletedAt           DateTime?
  bookingsAsDriver    Booking[] @relation(name: "DriverRelation")
  bookingsAsPassenger Booking[] @relation(name: "PassengerRelation")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String
  user User?
}

model DropOff {
  id        Int           @id @default(autoincrement())
  name      String
  address   String
  longitude String
  latitude  String
  status    DropOffStatus @default(ACTIVE)
  createdAt DateTime      @default(now())
  updatedAt DateTime?     @updatedAt
  deletedAt DateTime?
  bookings  Booking[]
}

model Booking {
  id        Int     @id @default(autoincrement())
  dropOff   DropOff @relation(fields: [dropOffId], references: [id])
  dropOffId Int     @unique

  driver   User @relation(name: "DriverRelation", fields: [driverId], references: [id])
  driverId Int

  passenger   User @relation(name: "PassengerRelation", fields: [passengerId], references: [id])
  passengerId Int

  status      BookingStatus
  pickupTime  DateTime
  dropoffTime DateTime
  createdAt   DateTime      @default(now())
}

enum DropOffStatus {
  ACTIVE
  DISABLED
}

enum BookingStatus {
  PENDING
  ACCEPTED
  ONGOING
  COMPLETED
  CANCELLED
}
